// https://github.com/MoOx/sass-prism-theme-base
/**
 * Prism base code highlighter theme using Sass 
 *
 * @author @MoOx
 */

// prism selector
$code-selector: "code[class*=\"language-\"], pre[class*=\"language-\"]";
$code-selector-block: "pre[class*=\"language-\"]";
$code-selector-inline: ":not(pre) > code[class*=\"language-\"]";

// generic stuff
$code-font-family: 		$base-code-font-family	!default;
$code-font-size: 		$base-code-font-size	!default;
$code-line-height:		null;

$code-tab-size: 		4		!default;
$code-hyphens: 			none	!default;

$code-block-padding: 	12px	!default;
$code-inline-padding: 	2px 6px	!default;
$code-border-radius: 	5px		!default;

$code-border: 			$global-border 	!default;
$code-background: 		$global-muted-background 			!default;
$code-color: 			$base-body-color 				!default;
$code-color-fade:		$global-muted-color 			!default;
$code-text-shadow: 		none;
$code-box-shadow: 		none;

// $code-linenums-padding:		7px !default;
// $code-linenums-width: 			40px !default;
// $code-linenums-background:		#444 !default;
// $code-linenums-border-color:	#555 !default;
// $code-linenums-border-width:	1px !default;

@if $code-selector != null {
    #{$code-selector} {
        -moz-tab-size: $code-tab-size;
        -o-tab-size: $code-tab-size;
        tab-size: $code-tab-size;

        -webkit-hyphens: $code-hyphens;
        -moz-hyphens: $code-hyphens;
        -ms-hyphens: $code-hyphens;
        hyphens: $code-hyphens;

        // whitespace management
        white-space: pre; // fallback
        white-space: pre-wrap;
        word-break: break-all;
        word-wrap: break-word;

        font-family: $code-font-family;
        font-size: 	$code-font-size;
        line-height: $code-line-height;

        color: $code-color;
        text-shadow: $code-text-shadow;
        background: $code-background;
    }
}

%code-background {
    border-radius: $code-border-radius;
    border: $code-border;
    box-shadow: $code-box-shadow;
}

@if $code-selector-block != null {
    #{$code-selector-block} {
        @extend %code-background;
        padding: $code-block-padding;
    }
}

@if $code-selector-inline != null {
    #{$code-selector-inline} {
        @extend %code-background;
        padding: $code-inline-padding;
    }
}

// pre[class*="language-"],
// :not(pre) > code[class*="language-"] {
// 	background: $code-background;
// }

// prism tokens
// 
$code-color-comment:		$text-muted-color	!default;
$code-color-keyword:		$text-primary-color	!default;
$code-color-value:			$text-success-color	!default;
$code-color-string:			$text-danger-color	!default;
$code-color-name:			$text-warning-color	!default;
$code-color-number:			$text-warning-color	!default;
$code-color-variable:		$text-warning-color	!default;
$code-color-selector:		null	!default;
$code-color-punctuation:	$code-color-fade	!default;

#{$code-selector} {
    .namespace {
        opacity: .7;
    }

    .token {
        &.comment,
        &.prolog,
        &.doctype,
        &.cdata {
            color: $code-color-comment;
        }

        &.null,
        &.operator,
        &.boolean,
        &.number {
            color: $code-color-number;
        }

        &.attr-name,
        &.string {
            color: $code-color-string;
        }

        &.entity,
        &.url,
        .language-css &.string,
        .style &.string {
            color: $code-color-string;
        }

        &.selector {
            color: $code-color-selector;
        }

        &.atrule,
        &.attr-value,
        &.keyword,
        &.control,
        &.directive,
        &.important,
        &.unit {
            color: $code-color-keyword;
        }

        &.regex,
        &.statement {
            color: $code-color-value;
        }

        &.placeholder,
        &.variable {
            color: $code-color-variable;
        }

        &.property,
        &.tag {
            font-style: italic;
        }

        &.important,
        &.statement {
            font-weight: bold;
        }

        // todo ?
        // &.mixin
        // &.gradient
        // &.abslength
        // &.easing
        // &.time
        // &.angle
        // &.fontfamily

        // ruby/vim https://github.com/LeaVerou/prism/pull/18
        // &.inst-var
        // &.builtin
        // &.const
        // &.symbol
        //
        // php https://github.com/LeaVerou/prism/pull/20
        // &.deliminator
        // &.function

        &.punctuation {
            color: $code-color-punctuation;
        }

        &.entity {
            cursor: help;
        }

        // for dev :)
        &.debug { color: red }
    }
}
