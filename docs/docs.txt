doc Docio categories 
`DocsParser docsMap` sorted by categories.
------
doc Docio packagePath
------
doc Docio outputPath 
Path to the `docs` in the destination package's directory.
------
doc Docio packageInfo 
Returns package.json as an instance of Map.
------
doc Docio packageName
------
doc Docio templatePath
------
doc Docio generateDocs 
Generates documentation for the package at `packagePath`.
------
doc Docio copyTemplate(templateDir)
------
doc Docio extractDocs 
Generates `docs.txt` using [DocsExtractor](docsextractor.html).
------
doc Docio generateSite 
Use this only after you did parsing.
------
doc Docio getDocsTxt
------
doc Docio Parser 
[DocsParser](docsparser.html)
------
doc Docio CLI 
[CLI](cli.html)
------
doc Docio DocsExtractor 
[DocsExtractor](docsextractor.html)
------
doc Docio PageGenerator 
[PageGenerator](pagegenerator.html)
------
doc Docio printDocFor(query) 
Prints documentation for given `query`.

The method will try to extract the documentation from `doc` comments, 
if the `docs/docs.txt` wouldn't exist in the package's directory.

Examples of query:
```
"ProtoName"
"ProtoName slotName"
"AddonName ProtoName slotName"
```
------
metadoc Docio category 
API
------
metadoc CLI category 
API
------
metadoc CLI description 
Docio command line interface.
------
doc PageGenerator init
------
doc PageGenerator generateSite
------
doc PageGenerator generateMainPage 
Generates the `index.html` from the `main_template.html`.
------
doc PageGenerator generatePrototypesPages 
Generates a page for each of the prototype of the given map. 
This method creates a page for each object from the prototype_template.html.
------
metadoc PageGenerator category 
API
------
metadoc PageGenerator description 
Generates documentation pages.
------
doc DocsParser docsMap 
The map generated after parse process.
------
doc DocsParser parse 
Parses `docs.txt` generated by [DocsExtractor](docsextractor.html) and fills up the `docsMap`.
------
metadoc DocsParser category 
API
------
metadoc 01_Introduction category 
Guide
------
metadoc 01_Introduction description
Docio is the documentation generator for Eerie â€” the package manager for Io. 
That means that it generates documentation from comments in sources of an Eerie's package.

After generation process it provides you with an HTML documentation pack that can be used as a site for
your project. It's also generates `docs.txt`, which is used by Docio to print you documentation right
in the console while you interact with the Io's interpreter.

Docio comes with a default template, based on [uikit](http://geuikit.com). But you can provide
your own template. And you can mix HTML with Io in such template.

This site is produced by Docio.

Docio's source code is available [here](https://github.com/AlesTsurko/docio).
------
